---
- name: Setup Expense Tracker Web Server
  hosts: all
  gather_facts: no
  become: true
  vars:
    mysql_root_password: "root"


  tasks:
    - name: Clean apt cache
      shell: |
        apt-get clean
        rm -rf /var/lib/apt/lists/*
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - nginx
          - git
          - mysql-server
          - python3
          - python3-pip
          - python3-venv
        state: present

    - name: Enable and start Nginx
      service:
        name: nginx
        enabled: yes
        state: started

    - name: Start MySQL service
      service:
        name: mysql
        state: started
        enabled: yes
    - name: Install Pymysql
      pip:
        name: PyMySQL
        executable: pip3
      become: true

    - name: Wait for MySQL to be ready
      shell: |
        until mysqladmin ping; do
          sleep 5
        done
      retries: 10
      delay: 5
      register: result
      until: result.rc == 0
    - name: Clone expense tracker repo
      git:
        repo: https://github.com/aungsanoo-mm/expense-app.git
        dest: /var/www/html/expense-tracker
        force: yes
    - name: Copy selectd file to my app folder
      copy:
        src: "/var/www/html/expense-tracker/myapp/{{ item }}"
        dest: "/var/www/html/expense-tracker/{{ item }}"
        remote_src: yes
      with_items:
        - index.html
        - app.py
        - script.js
        - style.css
        - expense.service
        - expense
        - requirement.txt
  
    - name: Set permissions
      file:
        path: /var/www/html/expense-tracker
        owner: www-data
        group: www-data
        recurse: yes

    - name: Copy Gunicorn service file
      copy:
        src: /var/www/html/expense-tracker/expense.service
        dest: /etc/systemd/system/expense.service
        mode: '0644'
        remote_src: yes
    - name: Copy Nginx defautl file to /etc/nginx/sites-available/
      copy:
        src: /var/www/html/expense-tracker/expense
        dest: /etc/nginx/sites-available/
        mode: '0644'
        remote_src: yes
    - name: Copy Nginx defautl file to site-enable 
      copy:
        src: /var/www/html/expense-tracker/expense
        dest: /etc/nginx/sites-enabled/
        mode: '0644'
        remote_src: yes
    - name: Replace default sites-enabled include with expense config
      replace:
        path: /etc/nginx/nginx.conf
        regexp: 'include /etc/nginx/sites-enabled/\*;'
        replace: 'include /etc/nginx/sites-enabled/expense;'
      notify: Restart nginx

    - name: Install Python dependencies
      pip:
        requirements: /var/www/html/expense-tracker/requirement.txt
      
    - name: Set MySQL root password and apply secure installation
      debconf:
        name: "mysql-server"
        question: "mysql-server/root_password"
        value: "{{ mysql_root_password }}"
        vtype: "password"

    - name: Confirm root password again
      debconf:
        name: "mysql-server"
        question: "mysql-server/root_password_again"
        value: "{{ mysql_root_password }}"
        vtype: "password"

    - name: Run mysql_secure_installation equivalent (disable remote root, remove test DB)
      shell: |
        mysql -u root <<EOF
        ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '{{ mysql_root_password }}';
        DELETE FROM mysql.user WHERE User='';
        DROP DATABASE IF EXISTS test;
        DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';
        FLUSH PRIVILEGES;
        EOF
      args:
        executable: /bin/bash
    - name: Create expenses_db database
      mysql_db:
        name: expenses_db
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Create MySQL user and grant privileges
      mysql_user:
        name: exp_user
        password: StrongPassword123!
        priv: 'expenses_db.*:ALL'
        host: localhost
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Copy SQL file to create expenses table
      copy:
        content: |
          CREATE TABLE IF NOT EXISTS expenses (
            id INT AUTO_INCREMENT PRIMARY KEY,
            date DATE,
            details TEXT,
            cat1 FLOAT,
            cat2 FLOAT,
            cat3 FLOAT,
            cat4 FLOAT,
            cat5 FLOAT,
            remarks TEXT,
            income FLOAT,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
          );
        dest: /tmp/create_expenses.sql
    - name: Create expense table
      mysql_db:
        name: expenses_db
        state: import
        target: /tmp/create_expenses.sql
        login_user: root
        login_password: "{{ mysql_root_password }}"
    - name: Reload systemd and start Gunicorn
      systemd:
        daemon_reload: yes
        name: expense.service
        enabled: yes
        state: started
  handlers: 
    - name: Restart nginx
      service:
        name: nginx
        state: restarted
